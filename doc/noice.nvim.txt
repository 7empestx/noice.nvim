*noice.nvim.txt*         For NVIM v0.5.0        Last change: 2022 September 30

==============================================================================
Table of Contents                               *noice.nvim-table-of-contents*

1. Noice _(Nice, Noise, Notice)_    |noice.nvim-noice-_(nice,-noise,-notice)_|
  - Features                                             |noice.nvim-features|
  - Status                                                 |noice.nvim-status|
  - Requirements                                     |noice.nvim-requirements|
  - Installation                                     |noice.nvim-installation|
  - Configuration                                   |noice.nvim-configuration|
  - Known Issues                                     |noice.nvim-known-issues|

==============================================================================
1. Noice _(Nice, Noise, Notice)_    *noice.nvim-noice-_(nice,-noise,-notice)_*

Highly experimental plugin that completely replaces the UI for `messages`,
`cmdline` and the `popupmenu`.

<div class="figure">
<img src="https://user-images.githubusercontent.com/292349/193263220-791847b2-516c-4f23-9802-31dd6bec5f6a.png" title="fig:"/>
<p class="caption">image</p>
</div>

FEATURES                                                 *noice.nvim-features*


- fully **configurable views** like nvim-notify <https://github.com/rcarriga/nvim-notify>, splits, popups, virtual text, ..
- use **filters** to **route messages** to different views
- message **highlights** are preserved in the views (like the colors of `:hi`)
- |:messages| are shown in normal buffers, which makes them much easier to work with
- `:Noice` command to show a full message history
- no more |:h more-prompt|
- fully customizable **cmdline** with icons
- **syntax highlighting** for `vim` and `lua` on the **cmdline**
- **statusline** components


STATUS                                                     *noice.nvim-status*

**WIP**

REQUIREMENTS                                         *noice.nvim-requirements*


- Neovim >= 0.9.0 or nightly
- nui.nvim <https://github.com/MunifTanjim/nui.nvim>: used for proper rendering and multiple views
- nvim-notify <https://github.com/rcarriga/nvim-notify>: notification view
- nvim-cmp <https://github.com/hrsh7th/nvim-cmp>: we use some internal views for rendering the cmdline completion popup.


INSTALLATION                                         *noice.nvim-installation*

Install the plugin with your preferred package manager:

>
    -- Packer
    use({
      "folke/noice.nvim",
      event = "VimEnter",
      config = function()
        require("noice").setup()
      end,
    })
<


CONFIGURATION                                       *noice.nvim-configuration*

**noice.nvim** comes with the following defaults:


  TODO: add proper documentation for config, views, routes, options For now,
  please refer to config.lua
  <https://github.com/folke/noice.nvim/blob/main/lua/noice/config.lua#L9>



  TIP: If you prefer a regular `cmdline` at the bottom of the screen, instead of
  the popup, change the views under routes from `cmdline_fancy` to `cmdline`.


>
    {
    }
<


KNOWN ISSUES                                         *noice.nvim-known-issues*

**Noice** is using the new experimental `vim.ui_attach` API.

During setup, we apply a bunch of Hacks
<https://github.com/folke/noice.nvim/blob/main/lua/noice/hacks.lua> to work
around some of the current issues.


- during a **Search**, we temporarily set `conceallevel=0`, to make sure _IncSearch_ is rendering correctly
- `vim.fn.getchar`, `vim.fn.getcharstr`, `vim.fn.inputlist` are wrapped, so we know **blocking input** is coming
- any **redraw** command is intercepted, to make sure we stop processing any messages during redraw
- when in `blocking` mode, we use a slightly fix for `nvim-notify` to make realtime notifications possible


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
